import{_ as s,o as e,c as a,a as n}from"./app.6dbb7ef3.js";const h=JSON.parse('{"title":"Fuzz Testing","description":"","frontmatter":{},"headers":[{"level":2,"title":"Running Fuzz Tests","slug":"running-fuzz-tests","link":"#running-fuzz-tests","children":[]},{"level":2,"title":"See Also","slug":"see-also","link":"#see-also","children":[]}],"relativePath":"guides/fuzz-testing.md","lastUpdated":1676230115000}'),t={name:"guides/fuzz-testing.md"},l=n(`<h1 id="fuzz-testing" tabindex="-1">Fuzz Testing <a class="header-anchor" href="#fuzz-testing" aria-hidden="true">#</a></h1><p>Fuzz testing or fuzzing is an automated software testing method that injects invalid, malformed, or unexpected inputs into a system to reveal software defects and vulnerabilities.</p><div class="danger custom-block"><p class="custom-block-title">NOTE</p><p>It is still in experimental phase.</p></div><p>At the core, pactum uses <a href="https://github.com/ASaiAnudeep/openapi-fuzzer-core" target="_blank" rel="noreferrer">openapi-fuzzer-core</a> to generate requests &amp; it partially supports swagger v2 open-api specification.</p><h2 id="running-fuzz-tests" tabindex="-1">Running Fuzz Tests <a class="header-anchor" href="#running-fuzz-tests" aria-hidden="true">#</a></h2><p>Running fuzz tests on a swagger endpoint.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> fuzz </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pactum</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fuzz</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onSwagger</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/api/swagger.json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-hidden="true">#</a></h2><ul><li><a href="/api/fuzz/fuzz.html">fuzz</a></li></ul>`,9),p=[l];function o(r,i,c,u,d,z){return e(),a("div",null,p)}const f=s(t,[["render",o]]);export{h as __pageData,f as default};
